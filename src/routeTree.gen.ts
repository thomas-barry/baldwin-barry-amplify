/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as GalleriesIndexImport } from './routes/galleries/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as GalleriesGalleryIdIndexImport } from './routes/galleries/$galleryId/index'
import { Route as GalleriesGalleryIdEditImport } from './routes/galleries/$galleryId/edit'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const GalleriesIndexRoute = GalleriesIndexImport.update({
  id: '/galleries/',
  path: '/galleries/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const GalleriesGalleryIdIndexRoute = GalleriesGalleryIdIndexImport.update({
  id: '/galleries/$galleryId/',
  path: '/galleries/$galleryId/',
  getParentRoute: () => rootRoute,
} as any)

const GalleriesGalleryIdEditRoute = GalleriesGalleryIdEditImport.update({
  id: '/galleries/$galleryId/edit',
  path: '/galleries/$galleryId/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/galleries/': {
      id: '/galleries/'
      path: '/galleries'
      fullPath: '/galleries'
      preLoaderRoute: typeof GalleriesIndexImport
      parentRoute: typeof rootRoute
    }
    '/galleries/$galleryId/edit': {
      id: '/galleries/$galleryId/edit'
      path: '/galleries/$galleryId/edit'
      fullPath: '/galleries/$galleryId/edit'
      preLoaderRoute: typeof GalleriesGalleryIdEditImport
      parentRoute: typeof rootRoute
    }
    '/galleries/$galleryId/': {
      id: '/galleries/$galleryId/'
      path: '/galleries/$galleryId'
      fullPath: '/galleries/$galleryId'
      preLoaderRoute: typeof GalleriesGalleryIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/admin': typeof AdminIndexRoute
  '/galleries': typeof GalleriesIndexRoute
  '/galleries/$galleryId/edit': typeof GalleriesGalleryIdEditRoute
  '/galleries/$galleryId': typeof GalleriesGalleryIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/admin': typeof AdminIndexRoute
  '/galleries': typeof GalleriesIndexRoute
  '/galleries/$galleryId/edit': typeof GalleriesGalleryIdEditRoute
  '/galleries/$galleryId': typeof GalleriesGalleryIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/admin/': typeof AdminIndexRoute
  '/galleries/': typeof GalleriesIndexRoute
  '/galleries/$galleryId/edit': typeof GalleriesGalleryIdEditRoute
  '/galleries/$galleryId/': typeof GalleriesGalleryIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/admin'
    | '/galleries'
    | '/galleries/$galleryId/edit'
    | '/galleries/$galleryId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/admin'
    | '/galleries'
    | '/galleries/$galleryId/edit'
    | '/galleries/$galleryId'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/admin/'
    | '/galleries/'
    | '/galleries/$galleryId/edit'
    | '/galleries/$galleryId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  AdminIndexRoute: typeof AdminIndexRoute
  GalleriesIndexRoute: typeof GalleriesIndexRoute
  GalleriesGalleryIdEditRoute: typeof GalleriesGalleryIdEditRoute
  GalleriesGalleryIdIndexRoute: typeof GalleriesGalleryIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  AdminIndexRoute: AdminIndexRoute,
  GalleriesIndexRoute: GalleriesIndexRoute,
  GalleriesGalleryIdEditRoute: GalleriesGalleryIdEditRoute,
  GalleriesGalleryIdIndexRoute: GalleriesGalleryIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/admin/",
        "/galleries/",
        "/galleries/$galleryId/edit",
        "/galleries/$galleryId/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.tsx"
    },
    "/galleries/": {
      "filePath": "galleries/index.tsx"
    },
    "/galleries/$galleryId/edit": {
      "filePath": "galleries/$galleryId/edit.tsx"
    },
    "/galleries/$galleryId/": {
      "filePath": "galleries/$galleryId/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
